# CSS:

## Selectors

* `*` All elements
* `#X` ids
* `.X` classes
* `X Y` 

## Defining a rule
```css
body {
	color: black;
}
```

or

```css
.classname {
	font-size: 16px;
}
```

## Fonts
* Declare font to use:

```css
body {
	font-family: Helvetica;
}
```

### Web Safe Fonts

#### Serif Fonts
* Georgia, serif
* "Palatino Linotype", "Book Antiqua", Palatino, serif
* "Times New Roman", Times, serif

#### Sans-Serif Fonts
* Arial, Helvetica, sans-serif
* "Arial Black", Gadget, sans-serif
* "Comic Sans MS", cursive, sans-serif
* Impact, Charcoal, sans-serif
* "Lucida Sans Unicode", "Lucida Grande", sans-serif
* Tahoma, Geneva, sans-serif
* "Trebuchet MS", Helvetica, sans-serif
* Verdana, Geneva, sans-serif

#### Monospace Fonts
* "Courier New", Courier, monospace
* "Lucida Console", Monaco, monospace

* font-weight: declared as a number between 100 and 900; the higher the number, the more bold the text will be.

## Size

### Pixel
* Example: 10px
* Number of pixels the element will take up

### Percentage
* Example: 10%
* Percentage of the parent element
	* NOTE: If you are defining the width or height of an element in percentage, its parent element must have it's width or height set.

### EM
```css
body {
	font-size: 1em;
}
```
* 1em is equal to the default font size of the webpage ( usually 16px )

## Box Model

### Padding
* Declares how much whitespace there will be between the content inside of a element and the elements border

### Margin
* Declares how far away from other elements the element will be
* To horizontally center an element within it's parent element, use:
```css
.element {
	margin: 0 auto;
}
```
* NOTE: Both of the above can be defined in either pixels, percentage, or em

## Color

### Name
* There are 140 named colors in CSS, such as `red`,`blue`,`cyan`, etc.

### RGB
```css
.classname {
	color: rgb(0,0,0)
}
```

*	This is three number representation of colors. The first number is for red, the second is for green, and the third is for blue. Each number can go from 0 to 255. The larger the number, the more that color will be represented.

### RGBA
```css
.classname {
	color: rgba(0,0,0,0.8)
}
```

* Same as RGB, except it provides the input of a fourth number that represents the transparency of the color.

### HEX
* Six-digit, three-byte hexadecimal number used in HTML, CSS, SVG, and other computing applications, to represent colors. The bytes represent the red, green and blue components of the color. One byte represents a number in the range 00 to FF (in hexadecimal notation), or 0 to 255 in decimal notation. This represents the least (0) to the most (255) intensity of each of the color components

## Background
* For a color:
```css
.classname {
	background: /* name of color */;
} or { background-color: colorname }
```

* For an image:
```css
.classnmae {
	background: url(path/to/image)
}
```

* To stretch background to the size of the user's browser window, use:
```css
.classname {
	background-size: cover;
	background-attachment: fixed;
}
```

## Positioning and Type
### Display
* specifies the type of box used for the element

### Position

#### Static
* this is the default for elements

#### Relative
* this positions an element relative to its parent

#### Absolute
* this positions an element in one area of the page, or the first parent element whose position is set to relative, and sits on top of all other items. It can sit below other items by changing it's z-index.

### Float
* pushs an element left or right and allows other elements to wrap around them

### Clear
* specifies which sides of an element where other floating elements are not allowed

## Other:
* cursor: You can change this property if, for example, you wanted the cursor to be pointer instead of the default

## Tools:
### colorpicker.com
* Allows you to pick any color, providing both the HEX and RGB codes

## Reference Sites

## Best Practices
* Put element rules in the same order that the elements appear in the HTML

