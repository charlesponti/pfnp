# PROGRAMMING FOR NON*PROGRAMMERS

	* Different browsers render pages differently due to them having different rendering engines such as Webkit on Safari and Chrome


## Front-End Versus Back-End
	* Front-End:
		* structured content, styleing and behaviour
		* Template: HTML
		* Style: CSS
		* Behaviour: JavaScript
		* Frameworks: jQuery, Angular, etc.

	* Back-End languages: Ruby, Python, PHP, etc.
		* preparation of the structured content that is delivered to the client, storing user input
		* Frameworks: Ruby on Rails, Django, etc.

## What Do Programs Actually Do?
	* Keep track of values (Variables)
	* Making decisions (if*>else)
	* Repeating things (For and While loops)
	* Storing things (Databases such as PostgreSQL and MongoDB)

## Project Processes:
	* Waterfall: Do one stage of the development process at a time, never to go back and repeat a previous step
	* Agile: Allows developers to jump from one stage to another and back again depending on what is needed to complete the job.

## Stages of Web Development
	* Design
		* User Experience: Meshing together your business needs with the user's needs, following the best practices
			* User Researcher: Indentifies user behaviors, goals, and needs through interviews, studies, and surveys
			* Information Architect(IA): Defines the structure of the system, how content is described, organized, and discovered
			* Interaction Designer(IxD)
		* Wireframing (OmniGraffle & Wireframe.cc)
		* Photoshop
		* Why, Who, What, Where, When, How

	* Develop


# Best Practices
	* D.R.Y: Don't Repeat Yourself
	* Commenting
	* Testing
	* Seperation of Concerns
	* Test


